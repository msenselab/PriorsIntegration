geom_point() +
facet_wrap(~Exp)+
theme_new+ #scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = 'Intervals (s)', y = 'Predicted RP - observed RP', shape= 'range', color='condition')+
theme(legend.position='bottom')+
scale_x_continuous(trans='log10') #Transform x axis to log10 scale
fig_predRP_Error_BR
fig_wp_BR = ggplot(mm_parameter_BR, aes(group, m_wp, color = group)) +
geom_point(position = position_dodge()) +
geom_errorbar(aes(ymin = m_wp-sd_wp, ymax = m_wp + sd_wp),position = position_dodge()) +
facet_wrap(~Exp)+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated weight of prior')+
theme(legend.position='bottom')
fig_wp_BR
fig_wp_BR_subj = ggplot(m_parameter_BR_sub, aes(group, m_wp, color = group)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
facet_wrap(~Exp)+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated weight of prior')+
theme(legend.position='bottom')
fig_wp_BR_subj
ggplot(AllDat_Bayparlist_BR, aes(Exp, mu_p_s)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated mean of short prior')+
theme(legend.position='bottom')
ggplot(AllDat_Bayparlist_BR, aes(Exp, sig_pr2_s)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated variance of short prior')+
theme(legend.position='bottom')
ggplot(AllDat_Bayparlist_BR, aes(Exp, mu_p_l)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated mean of long prior')+
theme(legend.position='bottom')
ggplot(AllDat_Bayparlist_BR, aes(Exp, sig_pr2_l)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated variance of long prior')+
theme(legend.position='bottom')
ggplot(AllDat_Bayparlist_BR, aes(Exp, sig2_t)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated variance of sensory measurement in log')+
theme(legend.position='bottom')
ggplot(AllDat_Bayparlist_BR, aes(Exp, sig2_mn)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated variance of montor noise in log')+
theme(legend.position='bottom')
fig_sig_r_BR_subj = ggplot(m_parameter_BR_sub, aes(group, m_sig_r, color = group)) +
geom_boxplot(position = position_dodge()) +
geom_jitter(shape=16, position=position_jitter(0.2))+
facet_wrap(~Exp)+
theme_new+ scale_color_manual(values = mycolors) +
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = ' ', y = 'estimated variance of RP')+
theme(legend.position='bottom')
fig_sig_r_BR_subj
Exp_session_order = read_csv(paste0(getwd(), '/data/Exp_session_order.csv'))
Exp_session_order
#load prediction generated by models
All_predY = read.csv(paste0(getwd(), "/", modelPath, "/rlt/PredY_mix_list_", logVersion, ".csv"))
All_predY$rpErr = All_predY$mu_r - All_predY$RP
All_predY$rErr = All_predY$rpErr / All_predY$targetDur
All_predY$model <- as.factor(All_predY$model)
All_predY$RP_BIAS = All_predY$RP- All_predY$targetDur
All_predY$prederr = All_predY$mu_r - All_predY$RP #prediction error
All_predY$predBIAS = All_predY$mu_r- All_predY$targetDur
All_predY[which(All_predY$group %in% c('short', 'long')),"priortype"] = 'BR'
All_predY[which(All_predY$group == 'mixed'),"priortype"] = 'IR'
All_predY$priortype = as.factor(All_predY$priortype)
All_predY$range = 'short'
All_predY[which(All_predY$targetDur > 1),"range"] = 'long'
All_predY$range = as.factor(All_predY$range)
m_mean_sd <- dplyr::group_by(All_predY, Exp, targetDur, model, priortype) %>%
dplyr::summarize( n = n(),
m_RP = mean(RP), #mean of observed RP
sd_RP = sd(RP), #observed sd of RP
m_sig_r = mean(sig_r),
m_mu_r = mean(mu_r),
sd_mu_r = sd(mu_r)
)
m_mean_sd$merr_mu_r <- (m_mean_sd$m_mu_r - m_mean_sd$m_RP)/m_mean_sd$m_RP
m_mean_sd$merr_sig_r <- (m_mean_sd$m_sig_r - m_mean_sd$sd_RP)/m_mean_sd$sd_RP
m_mean_sd
#listed in manuscript
m_m_mean_sd <- dplyr::group_by(m_mean_sd%>%filter(priortype == 'IR'), Exp, model) %>%
dplyr::summarize( n = n(),
m_sd_rerr = mean(abs(merr_sig_r)),
m_merr_mu_r = mean(abs(merr_mu_r)))
m_m_mean_sd
predY <- group_by(All_predY, targetDur, Exp, NSub, model, priortype, range) %>%
dplyr::summarize(m_RP = mean(RP),
m_RP_BIAS = mean(RP_BIAS),
m_predBIAS = mean(predBIAS),
m_predNBIAS = mean(abs(predBIAS)),
m_prederr = mean(prederr),
n = n(),
sd_RP = sd(RP),
cv_observed = sd_RP/m_RP,
se_RP = sd_RP/ sqrt(n-1),
m_mu_r = mean(mu_r),
m_sig_r = mean(sig_r), # sd of prediction
cv_Pred = m_sig_r/m_mu_r)
gp_var <- c('targetDur', 'Exp', 'model', 'priortype', 'range')
m_predY <- summarizePredY(predY, gp_var)
gp_var_sub <- c('NSub', 'Exp', 'model', 'priortype', 'range')
m_predY_sub <- summarizePredY(predY, gp_var_sub)
# plot observed RP vs. predicted RP
fig_predRP1_IR =  ggplot(m_predY, aes(targetDur, mm_mu_r, group = interaction(priortype, range), color = model))+
geom_point(alpha = 0.5)+
geom_point(m_predY, mapping =aes(targetDur, m_m_RP, color = as.factor('observation')))+
geom_abline(slope = 1, linetype = 2, size = 0.5) + # add diagonal line
theme_minimal()+ theme_new+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = "target duration", y = "predicted Reproduction")+
theme(legend.position = "top")+
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')+
facet_wrap(~Exp)
fig_predRP1_IR
ggsave(file.path(modelPath,'figures/fig_predRP1_IR.png'), fig_predRP1_IR, width = 7, height = 4)
#average data cross target duration
mm_predY<- m_predY %>%
dplyr::group_by(Exp, model, priortype, range) %>%
dplyr::summarize(
mm_prederr = mean(m_m_prederr),
mm_RP = mean(m_m_RP),
m_mm_mu_r =mean(mm_mu_r),
m_cv_observed = mean(m_cv_observed),
m_cv_Pred = mean(m_cv_Pred),
mm_sd_RP = mean(m_sd_RP),
m_mm_sig_r = mean(mm_sig_r))
mm_predY
# prepare the data to draw circles
rmax = 0.15
rmin = 0.0
theta=seq(from=0,by=.01,to=2*pi)
ncirc=12
dat.circ = do.call(rbind,
lapply(seq_len(ncirc), function(n){
r <- n*rmax/ncirc
data.frame(m_m_RP_BIAS=r*sin(theta),
mm_sig_r = r*sin(theta),
m_m_predBIAS = r*sin(theta),
m_cv_Pred=r*cos(theta), r=round(r,2))
}))
dat.circ1 = dat.circ
dat.circ2 = dat.circ1
dat.circ1$model = 'PIM'
dat.circ1$Exp = 'Exp1'
dat.circ1$priortype = 'mixed'
dat.circ1$range = 'short'
dat.circ2$range = 'short'
dat.circ2$priortype = 'mixed'
dat.circ2$model = 'PIM'
dat.circ2$Exp = 'Exp2'
dat.circ = rbind(dat.circ1,  dat.circ2)
# plot BIAS vs. sd of predicted reproducation, comparison  observation with prediction
fig_pred_BIAS_SD =  ggplot(m_predY_sub, aes(abs(m_m_predBIAS), mm_sig_r, color = model, shape = range))+
geom_point(alpha = 0.5)+
geom_abline(slope = 1, linetype = 2, size = 0.5) + # add diagonal line
geom_path(data=dat.circ, alpha=.2, aes(group=factor(r)))+
geom_point(mm_predY, mapping =aes(abs(m_mm_mu_r-mm_RP), m_mm_sig_r, color = model), size = 3)+
theme_minimal()+ theme_new+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = "BIAS", y = TeX("$\\sqrt[2]{sd_{RP}}$"))+
theme(legend.position = "top")+
facet_wrap(~Exp)+
xlim(rmin, rmax) + ylim(rmin, rmax)
ggsave(file.path(modelPath,'figures/fig_pred_BIAS_SD.png'), fig_pred_BIAS_SD, width = 7, height = 9)
fig_pred_BIAS_SD
# plot observed CV vs. predicted CV
fig_predCV1 =  ggplot(m_predY, aes(targetDur, m_cv_Pred, color = model))+
geom_point(alpha = 0.7)+
geom_point(m_predY, mapping =aes(targetDur, m_cv_observed, color = as.factor('observation')), shape = 3)+
geom_abline(slope = 1, linetype = 2, size = 0.5) + # add diagonal line
theme_minimal()+ theme_new+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = "Sample intervals", y = "Predicted CV")+
theme(legend.position = "top")+
facet_wrap(~Exp)+
theme(legend.key.size = unit(0.1, "inches"))
fig_predCV1
ggsave(file.path(modelPath,'figures/fig_predCV1.png'), fig_predCV1, width = 7, height = 4)
# plot observed CV vs. predicted CV
fig_predCV =  ggplot(m_predY_sub, aes(m_cv_observed, m_cv_Pred, shape = range, color = model))+
geom_point(alpha = 0.3)+
geom_point(mm_predY, mapping =aes(m_cv_observed, m_cv_Pred, shape = range, color = model), size =3)+
# geom_point(mm_predY, mapping =aes(m_cv_observed, m_cv_observed, color = as.factor('observation')), size = 3)+
geom_abline(slope = 1, linetype = 2, size = 0.5) + # add diagonal line
theme_minimal()+ theme_new+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = "Observed CV", y = "predicted CV", color = '')+
theme(legend.position = "top")+
facet_wrap(~Exp)+
theme(legend.key.size = unit(0.1, "inches"))
fig_predCV
# plot predicted RP and CV Error
fig_predError =  ggplot(m_predY_sub, aes(m_m_prederr, m_cv_Pred-m_cv_observed, color = model, shape = range))+
geom_point(alpha = 0.3)+
geom_point(mm_predY, mapping =aes(mm_prederr, m_cv_Pred-m_cv_observed, color = model, shape = range), size =3)+
geom_vline(xintercept = 0, linetype = "dashed", size = 0.5) + # add horizontal line
geom_hline(yintercept= 0, linetype="dashed", size = 0.5)+
theme_minimal()+ theme_new+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = "predicted RP Error", y = "predicted CV Error", color = '')+
theme(legend.position = "top")+
facet_wrap(~Exp)+
theme(legend.key.size = unit(0.1, "inches"))
fig_predError
mmm_predY <- m_predY_sub %>% dplyr::group_by(Exp, model, priortype) %>%
dplyr::summarize(
mm_cv_observed = mean(m_cv_observed),
mm_cv_Pred = mean(m_cv_Pred), n = n())
mmm_predY$acc_predCV = mmm_predY$mm_cv_Pred /mmm_predY$mm_cv_observed
mmm_predY
#generate the path of the results based on model version
modelPath = paste0(rstanmodelPath, '/models/', logVersion)
#load result of Bayesian parameters of all models
AllDat_Bayparlist <- read.csv(paste0(modelPath,"/rlt/AllDat_Bayparlist_", logVersion, ".csv"))
AllDat_Bayparlist$model <- as.factor(AllDat_Bayparlist$model)
ggboxplot(AllDat_Bayparlist, x = 'Exp', y = 'mu_p_g', color = 'Exp', add = 'jitter')+ theme_new +
scale_color_manual(values = mycolors)+
facet_wrap(~model)
ggboxplot(AllDat_Bayparlist, x = 'Exp', y = 'sig2_p_g', color = 'Exp', add = 'jitter')+theme_new +
scale_color_manual(values = mycolors)+
facet_wrap(~model)
#generate the path of the results based on model version
log_2part_Version = 'log_2part'
modelPath = paste0(rstanmodelPath, '/models/', log_2part_Version)
#load result of Bayesian parameters of all models
AllDat_Bayparlist_2part <- read.csv(paste0(modelPath,"/rlt/AllDat_Bayparlist_", log_2part_Version, ".csv"))
AllDat_Bayparlist_2part$model <- as.factor(AllDat_Bayparlist_2part$model)
ggboxplot(AllDat_Bayparlist_2part, x = 'model', y = 'mu_p_g', color = 'part', add = 'jitter')+
facet_wrap(~Exp)+
scale_color_manual(values = mycolors)
AllDat_Bayparlist_2part%>%filter(model !='IP') %>% dplyr::group_by(Exp, model, part) %>%
dplyr::summarize(m_mu_p_g = mean(mu_p_g), n = n(), se = sd(mu_p_g)/sqrt(n-1)) %>%
ggplot(aes(model, m_mu_p_g, ymin = m_mu_p_g - se, ymax = m_mu_p_g + se, group = interaction(Exp, model, part), color = part, shape = model))+
geom_line(stat = "identity",position = position_dodge(width = 0.2))+
geom_point(stat = "identity",position = position_dodge(width = 0.2))+
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
labs(x = " ", y = "Mean global prior") +
theme_minimal()+ theme_new + facet_wrap(~Exp)+
scale_color_manual(values = mycolors)
ggboxplot(AllDat_Bayparlist_2part%>%filter(model !='IP'), x = 'model', y = 'sig2_p_g', color = 'part', add = 'jitter')+
facet_wrap(~Exp)+
scale_color_manual(values = mycolors)
AllDat_Bayparlist_2part%>%filter(model !='IP') %>% dplyr::group_by(Exp, model, part) %>%
dplyr::summarize(m_sig2_p_g = mean(sig2_p_g), n = n(), se = sd(sig2_p_g)/sqrt(n-1)) %>%
ggplot(aes(model, m_sig2_p_g, ymin = m_sig2_p_g - se, ymax = m_sig2_p_g + se, group = interaction(Exp, model, part), color = part, shape = model))+
geom_line(stat = "identity",position = position_dodge(width = 0.2))+
geom_point(stat = "identity",position = position_dodge(width = 0.2))+
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
labs(x = " ", y = "Variance of global prior") +
theme_minimal()+ theme_new + facet_wrap(~Exp)+
scale_color_manual(values = mycolors)
m_WAIC <- dplyr::group_by(AllDat_Bayparlist, Exp, model) %>%
dplyr::summarize(m_looic = mean(looic),
m_p_loo = mean(p_loo),
m_elpd_loo = mean(elpd_loo),
m_se_looic = mean(se_looic),
m_se_p_loo = mean(se_p_loo),
m_waic = mean(waic),
m_p_waic = mean(p_waic),
m_se_waic = mean(se_waic),
n = n(),
se_waic = sd(waic)/sqrt(n-1),
se_looic = sd(looic)/sqrt(n-1))
m_WAIC
dat_WAIC = m_WAIC
dat_WAIC$model <- relevel(dat_WAIC$model, "LGM")
plt_waic <- ggplot(dat_WAIC, aes(model, m_waic, ymin = m_waic - se_waic, ymax = m_waic + se_waic, group =Exp, color = Exp, shape = model))+
geom_line(stat = "identity",position = position_dodge(width = 0.2))+
geom_point(stat = "identity",position = position_dodge(width = 0.2))+
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
labs(x = " ", y = "Mean WAIC") +
theme_minimal()+ theme_new +
scale_color_manual(values = mycolors)
plt_waic
ggsave(paste0(getwd(), '/', modelPath, '/figures/plt_waic.png'), plt_waic, width = 6, height = 4)
plt_looic <- ggplot(dat_WAIC, aes(model, m_looic, ymin = m_looic - se_looic, ymax = m_looic + se_looic,
group =Exp, color = Exp, shape = model))+
geom_line(stat = "identity",position = position_dodge(width = 0.2))+
geom_point(stat = "identity",position = position_dodge(width = 0.2))+
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
labs(x = " ", y = "Mean LOOIC") +
theme_minimal()+ theme_new +
scale_color_manual(values = mycolors)
ggsave(paste0(getwd(), '/', modelPath, '/figures/plt_looic.png'), plt_looic, width = 4, height = 4)
plt_looic
library(ggpubr)
fig_waic_looic<- ggarrange(plt_waic, plt_looic, common.legend = TRUE, legend = "bottom")
ggsave(paste0(getwd(), '/', modelPath, '/figures/fig_waic_looic.png'), fig_waic_looic, width = 7, height = 4)
fig_waic_looic
m_Baypar <- dplyr::group_by(AllDat_Bayparlist, Nsub, Exp, model) %>%
dplyr::summarize(m_mu_p_g = mean(mu_p_g),
m_sig2_p_g = mean(sig2_p_g),
m_mu_p_s_IR = mean(mu_p_s_IR),
m_mu_p_l_IR = mean(mu_p_l_IR),
m_sig2_p_g = mean(sig_pr2_s_IR),
m_sig_pr2_l_IR = mean(sig_pr2_l_IR))
m_Baypar
write.csv(m_Baypar, paste0(modelPath,"/rlt/m_Baypar_", logVersion, ".csv") )
mm_Baypar <- dplyr::group_by(m_Baypar, Exp, model) %>%
dplyr::summarize( mm_mu_p_s = mean(m_mu_p_s_IR),
mm_mu_p_l = mean(m_mu_p_l_IR),
mm_mu_p_g = mean(m_mu_p_g),
mm_sig2_p_s = mean(m_mu_p_s_IR),
mm_sig2_p_l = mean(m_sig_pr2_l_IR),
mm_sig2_p_g = mean(m_sig2_p_g))
mm_Baypar
fig_sigma2_long <- ggplot(mm_Baypar, aes(Exp, mm_sig_pr2_l, ymin = mm_sig_pr2_l -se_sig_pr2_l , ymax = mm_sig_pr2_l + se_sig_pr2_l, group = model, color = model), shape = model)+
geom_line(stat = "identity",position = position_dodge(width = 0.2))+
geom_point(stat = "identity",position = position_dodge(width = 0.2))+
geom_errorbar(width=.2,  position = position_dodge(width = 0.2)) +
theme_minimal()+ theme_new +
labs(x = " ",
y = "variance of local prior for long range",
color = "model")+
#scale_color_manual(values = mycolors5) +
scale_shape_manual(values = myshapevalues)
fig_mrepError_model <- ggplot(m_predY%>%filter(priortype == 'IR', model != 'IP'),
aes(targetDur,
mm_mu_r-m_m_RP, ymin = m_m_prederr - se_prederr, ymax = m_m_prederr + se_prederr,
group = interaction(range, model), color = model)) +
geom_point(position = position_dodge(width = 0.05))+
geom_errorbar(width = .05, position = position_dodge(width = 0.05))+
geom_line(size = .5, aes(color = model, linetype = model),  position = position_dodge(width = 0.05))+
#geom_point(data = sumexp%>%filter(priortype == 'IR'),  aes(targetDur, m_m_RP-m_m_RP, color = model))+ # measurement data
geom_hline(yintercept= 0, linetype = 2) +
theme_minimal()+ theme_new +
#scale_color_manual(values = mycolors5) +
scale_linetype_manual(values =  c('solid','dotted','dashed' ))+
facet_wrap(~Exp)+
scale_linetype(guide = FALSE)+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = 'Intervals (s)', y = 'Model predicted error(s)',  color='model')+ theme(legend.position='bottom')+
scale_x_continuous(trans='log10') +colorSet3
ggsave(file.path(modelPath,'figures/fig_mrepError_model.png'), fig_mrepError_model, width = 7, height = 4)
fig_mrepError_model
# observed data
exps <- read.csv(paste0(getwd(), '/data/AllExpData_valid.csv'))
gp_var_prior= c("NSub", "targetDur", "Exp", "priortype", "range")
sumexp <- summarizeMeanData(exps, gp_var_prior)
sumexp$model = as.factor('measured')
#m_m_RP se_prederr
fig_modelPrediction <- ggplot(m_predY%>%filter(priortype == 'IR', model != 'IP'),
aes(targetDur,
mm_mu_r, ymin = mm_mu_r+mm_sig_r, ymax = mm_mu_r-mm_sig_r,
group = interaction(range, model), color = model)) +
geom_point(position = position_dodge(width = 0.05))+
geom_errorbar(width = .05, position = position_dodge(width = 0.05))+
geom_line(size = .5, aes(color = model, linetype = model),  position = position_dodge(width = 0.05))+
geom_point(data = sumexp%>%filter(priortype == 'IR'),  aes(targetDur, m_m_RP, ymin = m_m_RP+m_sd_RP, ymax = m_m_RP-m_sd_RP, color = model))+ # measurement data
theme_minimal()+ theme_new +
#scale_color_manual(values = mycolors5) +
#scale_linetype_manual(values =  c('solid','dotted','dashed' ))+
facet_wrap(~Exp)+
scale_linetype(guide = FALSE)+
theme(strip.background = element_blank()) + # remove subtitle background
labs(x = 'Intervals (s)', y = 'Predicted reproduction (s)',  color='model')+ theme(legend.position='bottom')+
scale_x_continuous(trans='log10') +colorSet4
ggsave(file.path(modelPath,'figures/fig_modelPrediction.png'), fig_modelPrediction, width = 7, height = 4)
fig_modelPrediction
predY_err <- m_predY_sub %>%dplyr::group_by(Exp, model,range, priortype) %>%
dplyr::summarize(n= n(),
mm_pred_Var = mean(mm_sig_r- m_sd_RP),
se_prederr = sd(m_m_prederr)/sqrt(n-1),
se_pred_Var = sd(mm_sig_r- m_sd_RP)/sqrt(n-1),
m_m_prederr = mean(m_m_prederr))
predY_err$m_m_prederr=0
m_predY_sub$mm_pred_Var = m_predY_sub$mm_sig_r- m_predY_sub$m_sd_RP
plt_rErrorScatter = ggplot(data = predY_err%>%filter(priortype == 'IR', model != 'IP'), aes(m_m_prederr, mm_pred_Var, color = model, shape=range)) +
geom_hline(yintercept = 0, linetype='dashed')+ geom_vline(xintercept = 0, linetype='dashed')+
geom_point(alpha = .5, size = 4)+
geom_errorbar(aes(ymin = mm_pred_Var-se_pred_Var, ymax = mm_pred_Var+se_pred_Var), width = .01)+
geom_errorbarh(aes(xmin=m_m_prederr-se_prederr, xmax = m_m_prederr+se_prederr), width = .01)+
geom_point(data = m_predY_sub%>%filter(priortype == 'IR', model != 'IP'), aes(m_m_prederr, mm_pred_Var, color = model, shape=range), alpha = 0.9, size = 1) +
xlab('Prediction error in the RP mean')+
ylab('Prediction error in the RP variance')+
facet_wrap(~Exp)+colorSet3+
theme_new+ theme(legend.position = 'top')
plt_rErrorScatter
predY_err_new <- m_predY_sub %>%dplyr::group_by(Exp, model, priortype) %>%
dplyr::summarize(n= n(),
mm_m_RP = mean(m_m_RP),
mm_sd_RP = mean(m_sd_RP),
mm_pred_Var = mean(mm_sig_r- m_sd_RP),
mm_pred_Var_NBIAS = mean(abs(mm_sig_r- m_sd_RP)),
se_prederr = sd(m_m_prederr)/sqrt(n-1),
se_pred_Var = sd(mm_sig_r- m_sd_RP)/sqrt(n-1),
m_m_prederr = mean(m_m_prederr),
m_m_pred_NBIAS = mean(abs(m_m_prederr)))
gp_var_sub <- c('NSub', 'Exp', 'model', 'priortype')
m_predY_sub_new <- summarizePredY(predY, gp_var_sub)
m_predY_sub_new$mm_pred_Var = m_predY_sub_new$mm_sig_r- m_predY_sub_new$m_sd_RP
plt_rErrorScatter1 = ggplot(data = predY_err_new%>%filter(priortype == 'IR', model !='IP'), aes(m_m_prederr, mm_pred_Var, color = model)) +
geom_hline(yintercept = 0, linetype='dashed')+ geom_vline(xintercept = 0, linetype='dashed')+
geom_point(alpha = .5, size = 4)+
geom_errorbar(aes(ymin = mm_pred_Var-se_pred_Var, ymax = mm_pred_Var+se_pred_Var), width = .005)+
geom_errorbarh(aes(xmin=m_m_prederr-se_prederr, xmax = m_m_prederr+se_prederr), width = .1)+
geom_point(m_predY_sub_new%>%filter(priortype == 'IR', model != 'IP'), mapping = aes(m_m_prederr, mm_pred_Var, color = model), alpha = .9) +
facet_wrap(~Exp) +colorSet3+
xlab('Prediction error in the RP mean')+
ylab('Prediction error in the RP variance')+
theme_new+ theme(legend.position = 'top')+guides(size="none")+guides(alpha="none")
plt_rErrorScatter1
plt_rErrorScatter2 = ggplot(data = predY_err_new%>%filter(priortype == 'IR', model !='IP'), aes(m_m_pred_NBIAS, mm_pred_Var_NBIAS, color = model)) +
#geom_hline(yintercept = 0, linetype='dashed')+ geom_vline(xintercept = 0, linetype='dashed')+
geom_point(alpha = .5, size = 4)+
geom_errorbar(aes(ymin = mm_pred_Var_NBIAS-se_prederr, ymax = mm_pred_Var_NBIAS+se_prederr), width = .005)+
geom_errorbarh(aes(xmin= m_m_pred_NBIAS-se_pred_Var, xmax = m_m_pred_NBIAS+se_pred_Var), height = .01)+
geom_point(m_predY_sub_new%>%filter(priortype == 'IR', model != 'IP'), mapping = aes(abs(m_m_prederr), abs(mm_pred_Var), color = model), alpha = .9) +
facet_wrap(~Exp) +colorSet3+
xlab('Mean absolute error of reproduction mean')+
ylab('Mean absolute error of reproduction variance')+
theme_new+ theme(legend.position = 'top')+guides(size="none")+guides(alpha="none")
plt_rErrorScatter2
predY_err_new$acc_err <-   100*(1-predY_err_new$m_m_pred_NBIAS/predY_err_new$mm_m_RP)
predY_err_new$acc_var <- 100*(1-predY_err_new$mm_pred_Var_NBIAS/predY_err_new$mm_sd_RP)
plt_rErrorScatter3 = ggplot(data = predY_err_new%>%filter(priortype == 'IR', model !='IP'), aes(100*m_m_pred_NBIAS/mm_m_RP, 100*mm_pred_Var_NBIAS/mm_sd_RP, color = model)) +
#geom_hline(yintercept = 0, linetype='dashed')+ geom_vline(xintercept = 0, linetype='dashed')+
geom_point(alpha = .5, size = 5)+
geom_errorbar(aes(ymin = 100*(mm_pred_Var_NBIAS-se_prederr)/mm_sd_RP, ymax = 100*(mm_pred_Var_NBIAS+se_prederr)/mm_sd_RP), width = .2)+
geom_errorbarh(aes(xmin= 100*(m_m_pred_NBIAS-se_pred_Var)/mm_m_RP, xmax = 100*(m_m_pred_NBIAS+se_pred_Var)/mm_m_RP), height = 2)+
geom_point(m_predY_sub_new%>%filter(priortype == 'IR', model != 'IP'), mapping = aes(100*abs(m_m_prederr)/m_m_RP, 100*abs(mm_pred_Var)/m_sd_RP, color = model), alpha = .5) +
facet_wrap(~Exp) +colorSet3+
xlab('MAPE of Reproduction mean(%)')+
ylab('MAPE of Reproduction variance(%)')+
theme_new+ theme(legend.position = 'top')+guides(size="none")+guides(alpha="none")
plt_rErrorScatter3
fig_ModelRlt <- ggarrange(fig_mrepError_model, plt_rErrorScatter3, common.legend = TRUE, nrow = 2, ncol = 1, labels = c('a', 'b'))
ggsave(paste0(getwd(), "/", modelPath, "/figures/fig_ModelRlt.png"), fig_ModelRlt, width = 7, height = 7)
fig_ModelRlt
cor_err_table <- predY %>% dplyr::group_by(Exp, model) %>%
dplyr::summarise(r2 = cor(m_RP, m_mu_r, method = c("pearson", "kendall", "spearman")))%>% dplyr::group_by(Exp, model) %>%
dplyr::summarise(m_r2 = mean(r2))
cor_err_table
cor_err_table <- predY%>% filter(priortype =='IR', model != 'Baseline') %>% dplyr::group_by(Exp, model) %>%
dplyr::summarise(r2 = cor(m_RP, m_mu_r, method = c("pearson", "kendall", "spearman")))%>% dplyr::group_by(Exp, model) %>%
dplyr::summarise(m_r2 = mean(r2))
cor_err_table
cor_err_table_DIM <- predY%>% filter(priortype =='IR', model == 'DIM') %>% dplyr::group_by(Exp, model, range) %>%
dplyr::summarise(r2 = cor(m_RP, m_mu_r, method = c("pearson", "kendall", "spearman")))%>% dplyr::group_by(Exp, model, range) %>%
dplyr::summarise(m_r2 = mean(r2))
cor_err_table_DIM
AllDat_Bayparlist %>%
group_by(model,Exp) %>%
summarise(m_mu_p_g = mean(mu_p_g), n=n(), se = sd(mu_p_g)/sqrt(n-1)) %>% ggplot(aes(model, m_mu_p_g, color = model)) + geom_line()+ geom_point() + geom_errorbar(aes(ymin = m_mu_p_g - se, ymax = m_mu_p_g + se ), width = 1) +
xlab('models') + ylab('mean of global prior') +
facet_grid(~Exp)+ theme_new
m_predErr_all$version = as.factor(m_predErr_all$version)
m_predErr_all$version = as.factor(m_predErr_all$version)
#import linear model results
linear_model = 'linear'
m_predErr_linear = read.csv(paste0(getwd(), "/", rstanmodelPath, '/models/', linear_model, "/rlt/m_predErr_", linear_model, ".csv"))
m_predErr_linear$X = NULL
m_predErr_sub_linear = read.csv(paste0(getwd(), "/", rstanmodelPath, '/models/', linear_model, "/rlt/m_predErr_sub_", linear_model, ".csv"))
m_predErr_sub_linear$X = NULL
m_predErr_sub_all = rbind(m_predErr_sub, m_predErr_sub_linear)
linear_model = 'linear'
m_predErr_linear = read.csv(paste0(getwd(), "/", rstanmodelPath, '/models/', linear_model, "/rlt/m_predErr_", linear_model, ".csv"))
m_predErr_linear$X = NULL
m_predErr_sub_linear = read.csv(paste0(getwd(), "/", rstanmodelPath, '/models/', linear_model, "/rlt/m_predErr_sub_", linear_model, ".csv"))
m_predErr_sub_linear$X = NULL
View(m_predErr_sub)
m_predErr_sub<- m_predY_sub%>%
dplyr::group_by(Exp, model, NSub) %>% dplyr::summarise(
mpredRP_err=mean(predRP_err),
mpredVar_err=mean(predVar_err),
mpredRP_rerr = mean(predRP_rerr),
mpredVar_rerr = mean(predVar_rerr),
mpredcv_rerr = mean(predcv_rerr),
mpredcv_err = mean(predcv_err))
m_predY <- m_predY_sub %>%
dplyr::group_by(Exp, targetDur, model) %>%
dplyr::summarize(n = n(),
m_m_repDur = mean(m_repDur),
se_m_repDur = sd(m_repDur) /sqrt(n-1),
m_sd_repDur = mean(sd_repDur),
m_m_sig_r =mean(m_sig_r),
se_sig_r = sd(m_sig_r)/sqrt(n-1),
m_m_mu_r = mean(m_mu_r),
cv = mean(cv),
pred_cv = mean(pred_cv),
mpredRP_err = mean(predRP_err),
mpredVar_err = mean(predVar_err),
mpredRP_rerr = mean(predRP_rerr),
mpredVar_rerr = mean(predVar_rerr),
mpredcv_err = mean(predcv_err),
mpredcv_rerr = mean(predcv_rerr))
